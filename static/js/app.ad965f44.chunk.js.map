{"version":3,"sources":["screens/HomeScreen.tsx","App.tsx","web-build/register-service-worker.js"],"names":["HomeScreen","React","useState","quantity","onChangeQuantity","currencies","setCurrencies","selectedOriginCurrency","setSelectedOriginCurrency","selectedDestinyCurrency","setSelectedDestinyCurrency","result","setResult","useEffect","fetch","then","response","json","data","allCurr","Object","values","usd","shift","unshift","code","bid","newBtcPrice","parseFloat","toString","console","log","View","style","styles","view","Text","text","TextInput","input","onChangeText","onChange","e","target","value","updateResult","keyboardType","maxLength","separator","Picker","selectedValue","height","width","onValueChange","itemValue","itemIndex","handleOriginCurrencyChange","map","prop","key","Item","label","handleDestinyCurrencyChange","toFixed","StyleSheet","create","alignItems","justifyContent","alignSelf","backgroundColor","fontSize","fontFamily","color","fontWeight","fontStyle","margin","padding","borderRadius","borderColor","borderWidth","marginVertical","App","navigator","window","addEventListener","serviceWorker","register","scope","info","catch","error"],"mappings":"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","file":"static/js/app.ad965f44.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Image, StyleSheet, TextInput, View, Picker } from 'react-native';\r\nimport { Text } from \"react-native-paper\";\r\n\r\nexport default function HomeScreen() {\r\n    const [quantity, onChangeQuantity] = React.useState(\"\")\r\n    const [currencies, setCurrencies] = React.useState([])\r\n    const [selectedOriginCurrency, setSelectedOriginCurrency] = React.useState(\"\")\r\n    const [selectedDestinyCurrency, setSelectedDestinyCurrency] = React.useState(\"\")\r\n    const [result, setResult] = React.useState(0)\r\n\r\n    React.useEffect(() => {\r\n        fetch('https://economia.awesomeapi.com.br/json/all')\r\n            .then((response) => response.json())\r\n            .then((data: object) => {\r\n                let allCurr: any = Object.values(data)\r\n                let usd = allCurr[0]\r\n                allCurr.shift()\r\n                allCurr.shift()\r\n                allCurr.unshift(usd)\r\n                allCurr.unshift({ code: \"BRL\", bid: \"1\" })\r\n                let newBtcPrice = (parseFloat(allCurr[5]['bid']) * 1000).toString()\r\n                allCurr[5] = { code: \"BTC\", bid: newBtcPrice }\r\n                console.log(allCurr[5])\r\n                setCurrencies(allCurr)\r\n                setSelectedOriginCurrency('1')\r\n                setSelectedDestinyCurrency('1')\r\n            })\r\n    }, [])\r\n\r\n    function handleOriginCurrencyChange(itemValue: string, itemIndex: number) {\r\n        setSelectedOriginCurrency(itemValue)\r\n        setResult(parseFloat(itemValue) / parseFloat(selectedDestinyCurrency) * parseFloat(quantity == '' ? '0' : quantity))\r\n    }\r\n\r\n    function handleDestinyCurrencyChange(itemValue: string, itemIndex: number) {\r\n        setSelectedDestinyCurrency(itemValue)\r\n        setResult(parseFloat(selectedOriginCurrency) / parseFloat(itemValue) * parseFloat(quantity == '' ? '0' : quantity))\r\n    }\r\n\r\n    const updateResult = (e: any) => {\r\n        setResult(parseFloat(selectedOriginCurrency) / parseFloat(selectedDestinyCurrency) * parseFloat(e.target.value == '' ? '0' : e.target.value))\r\n    }\r\n\r\n    return (\r\n        <View style={styles.view}>\r\n\r\n            <Text style={styles.text}>Valor</Text>\r\n            <TextInput\r\n                style={styles.input}\r\n                onChangeText={onChangeQuantity}\r\n                onChange={(e) => updateResult(e)}\r\n                keyboardType={'numeric'}\r\n                maxLength={10}\r\n                value={quantity}>\r\n            </TextInput>\r\n\r\n            <View style={styles.separator} />\r\n\r\n            <Text style={styles.text}>Moeda Origem</Text>\r\n            <Picker\r\n                selectedValue={selectedOriginCurrency}\r\n                style={{ height: 50, width: 250 }}\r\n                onValueChange={(itemValue, itemIndex) => handleOriginCurrencyChange(itemValue, itemIndex)}\r\n            >\r\n                {currencies.map((prop, key) => {\r\n                    return (\r\n                        <Picker.Item label={prop['code']} value={prop['bid']} />\r\n                    )\r\n                })}\r\n            </Picker>\r\n\r\n            <View style={styles.separator} />\r\n\r\n            <Text style={styles.text}>Moeda Destino</Text>\r\n            <Picker\r\n                selectedValue={selectedDestinyCurrency}\r\n                style={{ height: 50, width: 250 }}\r\n                onValueChange={(itemValue, itemIndex) => handleDestinyCurrencyChange(itemValue, itemIndex)}\r\n            >\r\n                {currencies.map((prop, key) => {\r\n                    return (\r\n                        <Picker.Item label={prop['code']} value={prop['bid']} />\r\n                    )\r\n                })}\r\n            </Picker>\r\n\r\n            <View style={styles.separator} />\r\n\r\n            <Text style={styles.text}>Valor Convertido: {result.toFixed(2)} </Text>\r\n\r\n        </View>)\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    view: {\r\n        width: '100%',\r\n        height: '100%',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        alignSelf: 'center',\r\n        backgroundColor: 'white'\r\n    },\r\n    text: {\r\n        width: 250,\r\n        alignSelf: \"center\",\r\n        justifyContent: 'center',\r\n        fontSize: 28,\r\n        fontFamily: 'roboto',\r\n        color: 'black',\r\n        fontWeight: 'bold',\r\n        fontStyle: 'normal',\r\n    },\r\n    input: {\r\n        width: 250,\r\n        height: 35,\r\n        margin: 6,\r\n        padding: 10,\r\n        backgroundColor: 'white',\r\n        borderRadius: 10,\r\n        borderColor: 'black',\r\n        borderWidth: 2,\r\n        fontSize: 28\r\n    },\r\n    separator: {\r\n        marginVertical: 20,\r\n        height: 1,\r\n        width: '80%',\r\n        backgroundColor: '#eee',\r\n\r\n    },\r\n})\r\n","import React from 'react';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport HomeScreen from './screens/HomeScreen';\n\nexport default function App() {\n  return (\n    <SafeAreaProvider>\n      <HomeScreen />\n    </SafeAreaProvider>\n  );\n}\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function () {\n    navigator.serviceWorker\n      .register('/CurrencyConverter/expo-service-worker.js', { scope: '/CurrencyConverter/' })\n      .then(function (info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function (error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n"],"sourceRoot":""}